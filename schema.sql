-- CREATE DATABASE
CREATE DATABASE ECOMMERCE_SALES_ANALYSIS; 

-- USED DATABASE
USE ECOMMERCE_SALES_ANALYSIS; 

-- CUSTOMERS TABLE
 CREATE TABLE CUSTOMERS (
CUSTOMER_ID INT PRIMARY KEY AUTO_INCREMENT,
NAME VARCHAR(50),
EMAIL VARCHAR(50) CHECK(EMAIL LIKE '%@%'),
SIGNUP_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
); 

-- CUSTOMER_ADDRESSES TABLE
 CREATE TABLE CUSTOMER_ADDRESSES (
ADDRESS_ID INT PRIMARY KEY AUTO_INCREMENT,
CUSTOMER_ID INT NOT NULL,
ADDRESS_LINE_1 VARCHAR(150) NOT NULL,
ADDRESS_LINE_2 VARCHAR(150),
CITY VARCHAR(20),
STATE VARCHAR(20),
POSTAL_CODE VARCHAR(10),
COUNTRY VARCHAR(20),
CONSTRAINT CUSTOMER_ID_FK FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
); 

-- CATEGORIES TABLE
CREATE TABLE CATEGORIES (
CATEGORY_ID INT PRIMARY KEY AUTO_INCREMENT,
CATEGORY_NAME VARCHAR(50) NOT NULL,
PARENT_ID INT,
CONSTRAINT PARENT_ID_FK FOREIGN KEY(PARENT_ID) REFERENCES CATEGORIES(CATEGORY_ID)
); 

-- PRODUCTS TABLE
CREATE TABLE PRODUCTS (
PRODUCT_ID INT PRIMARY KEY AUTO_INCREMENT,
PRODUCT_NAME VARCHAR(50) NOT NULL,
CATEGORY_ID INT,
PRICE DECIMAL(10,2) NOT NULL,
COST_PRICE DECIMAL(10,2),
CONSTRAINT CATEGORY_ID_CHK FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID)
); 

-- ORDERS TABLE
CREATE TABLE ORDERS (
ORDER_ID INT PRIMARY KEY AUTO_INCREMENT,
CUSTOMER_ID INT NOT NULL,
ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
STATUS VARCHAR(50) CHECK(STATUS IN ('PENDING','PAID','SHIPPED','DELIVERED','CANCELLED')),
CONSTRAINT CUSTOMER_FK FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
); 

-- ORDER_ITMES TABLE
CREATE TABLE ORDER_ITMES (
ORDER_ITEM_ID INT PRIMARY KEY AUTO_INCREMENT,
ORDER_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
QUANTITY INT NOT NULL CHECK(QUANTITY > 0),
UNIT_PRICE DECIMAL(10,2) NOT NULL,
DISCOUNT DECIMAL(10,2) DEFAULT 0,
CONSTRAINT ORDER_FK FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID),
CONSTRAINT PRODUCT_FK FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
); 

-- DISCOUNTS TABLE
CREATE TABLE DISCOUNTS (
DISCOUNT_ID INT PRIMARY KEY AUTO_INCREMENT,
PRODUCT_ID INT NOT NULL,
DISCOUNT_TYPE VARCHAR(20) CHECK(DISCOUNT_TYPE IN ('PERCENTAGE','FIXED')),
DISCOUNT_VALUE DECIMAL(8,2) NOT NULL,
STARTING_DATE DATE,
ENDING_DATE DATE,
CONSTRAINT PRODUCT_ID_FK FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
); 

-- PAYMENTS TABLE
CREATE TABLE PAYMENTS (
PAYMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
ORDER_ID INT NOT NULL,
TRANSACTION_ID VARCHAR(30) UNIQUE NOT NULL,
PROVIDER VARCHAR(20) NOT NULL,
AMOUNT DECIMAL(10,2) NOT NULL,
STATUS VARCHAR(20) CHECK(STATUS IN ('PENDING','COMPLETED','FAILED','REFUNDED')),
PAYMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT ORDERS_PAY_FK FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID)
);



